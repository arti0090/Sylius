name: Performance

on:
    schedule:
        - cron: "0 16 * * 5,6" # Run at 4pm every Friday, Saturday

jobs:
    performance-checks:
        runs-on: ubuntu-18.04

        name: "Speed checks (PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }})"
    
        timeout-minutes: 10

        strategy:
            fail-fast: false
            matrix:
                php: [ "8.0" ]
                symfony: [ "5.2.*" ]

        steps:
            -   uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    ini-values: date.timezone=Europe/Warsaw, opcache.enable=1, opcache.enable_cli=1, opcache.memory_consumption=256, opcache.max_accelerated_files=32531, opcache.interned_strings_buffer=8, opcache.validate_timestamps=0, opcache.save_comments=1, opcache.fast_shutdown=0
                    extensions: intl, gd, opcache, mysql, pdo_mysql, :xdebug
                    tools: symfony
                    coverage: none

            -   name: Restrict Symfony version
                if: matrix.symfony != ''
                run: |
                    composer global require --no-progress --no-scripts --no-plugins "symfony/flex:^1.10"
                    composer config extra.symfony.require "${{ matrix.symfony }}"

            -   name: Get Composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache Composer
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-composer-

            -   name: Install PHP dependencies
                run: composer update --no-interaction --no-scripts
                id: end-of-setup

            -   name: Prepare application database
                run: |
                    APP_DEBUG=1 bin/console doctrine:database:create -vvv
                    bin/console doctrine:migrations:migrate -n -vvv

            -   name: Test installer
                run: bin/console sylius:install --no-interaction -vvv

            -   name: Load database
                ## TODO run: 
                ## TODO create scripts/procedures for SQL database, so no fixture will be loaded
                
            -   name: Run performance tests
                ##TODO run: create tests
